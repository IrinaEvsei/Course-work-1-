ОПИСАНИЕ ПРОЕКТА:
 	Набор консольных утилит для редактирования графических файлов.
 	Интерфес пользователя реализуется через фацловую систему и набор команд предназначенных для консольного ввода.

ФУНКЦИИ И ВОЗМОЖНОСТИ:
	1. Управление цветом – точные управления цветом с цветовыми профилями
	ДД-- делаем
	2. Обработка командной строки – использовать из командной строки
	ДД-- 
	3. Декорировать – добавить рамку или рамку к изображению
	ДД-- делаем
	4. Идентификация изображения – описывают формат и атрибуты изображения
	ДД-- я не понял, а чем это
	5. Поддержка больших изображений – читать, процесс, или писать мега-, гига, или размеры изображения тера-пиксельные.
	ДД-- уверена, что это надо? будет осложнять процесс тестирования и разработки. Все таки о киллер-фичах пока думать не призодится. Давай сконцентрируемся на том, что реально можно сделать относительно просто.
	6. Текст и комментарии – вставьте описательный или художественного текста в изображении.
	ДД-- не делаем. будет сложновато, по-моему
	7. Спецэффекты – размытие, резкость, порог, или подкрасить изображение.
	ДД-- делаем
	8. Преобразить – изменять размер, поворачивать, выпрямлять, обрезать, переворачивать или обрезать изображение.
	ДД-- делаем
	9. Анимация – создать последовательность GIF анимацию из группы изображений.
	ДД-- не делаем. Скорее гиф разумнее создавать из видео потока путем растеризации кадров и склеивания всего в гиф. Делать гиф из статическизх картинок дело неблагодарное.
	10. Калькулятор изображения – применить математическое выражение к изображению или изображения каналов.
	ДД-- я не понял, о чем это. Требует пояснения.

ДД-- практически весь текст, укащанный здесь плохо сформулирован и больше напоминает набор ключевых фраз. Надо переработать.


Пользовательские истории:
1. Как пользователь, при авторизации я хочу иметь возможность загрузить выбранное мною изображение (браузер / отдельное окно программы);
2. Как пользователь, я хочу иметь возможность обработки с помощью командной строки ;
3. Как пользователь, я хочу иметь возможность идентификации изображения (возможно);
4. Как пользователь, я хочу иметь возможность управления цветом;
5. Как пользователь, я хочу иметь возможность добавления спецэффектов к изображению;
6. Как пользователь, я хочу иметь возможность преображения изображения;
7. Как пользователь, я хочу иметь возможность создания анимации из групп изображений;
8. Как пользователь, я хочу иметь возможность декорирования изображения;
9. Как пользователь, я хочу иметь возможность добавления текстовых комментариев к изображению;
10. Как пользователь, я хочу иметь возможность поддержки больших изображений;
11. Как пользователь, я хочу иметь возможность отмены некоторого действия, а так же сохранения необходимого мне результата работы. 

ДД-- здесь надо более точно описывать, КАК и ЧТО я могу делать. Истории -- это не просто функциональный список. Это описание того, КТО и КАК может использовать программу. В данном случае роль одна -- "пользователь", поэтому выражение "Как пользователь, я хочу иметь возможность" можно опускать, а прямо переходить к описанию последовательности действий. Например
ЭПИК регистрация и авторизация:
	1. Программа доступна только для зарегистрированных пользователей. Для подтверждения регистрации в папке с программой должен присутстововать файл register.txt c регистрационным ключом, в котором в зашифрованном (ну, или явном) виде хранятся данные пользователя.
	2. При отсутсвии ключа при использовании программа выводит сообщение об ошибке
	3. Получение регистрационного ключа:
		a. При вызове программы с параметром --register пользователь перезодит к диалогу сбора регистрационной информации
		b. В диалоге пользователь вводит свой email
		c. Прогамма отправляет данные пользователя на сервер авторизации
		d. На указанный email полтзователю приходят инструкции об обпалте и пр....

ЭПИК ввод и вывод
	1. На входе в программу пользователь передает абсолютный или относительный путь к дирерктории с графическими файлами для обработки
	2. На выходе программа создает в указанной дирректории папку "results", где зранятся результаты обработки данных
	3. Команды для обработки можно передать следующими способами:
		a. Как параметры вызова программы
		b. В произвольном файле xml (yml, json, txt....) формата


НУ В ОБЩЕМ ТЫ ПОНЯЛА ... :)